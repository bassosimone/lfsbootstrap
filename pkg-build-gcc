#!/bin/bash
set -euxo pipefail

# run the preinstallation script
touch /usr/bin/passwd
mkdir -p /etc/default

# create temporary directory
WORK=$(mktemp -d)
cd $WORK

# extract sources
pkg_name=gcc-13.2.0
tar -xf /usr/src/$pkg_name.tar.xz
cd $pkg_name

# prepare the package
case $(uname -m) in
x86_64)
	sed -e '/m64=/s/lib64/lib/' \
		-i.orig gcc/config/i386/t-linux64
	;;
esac

mkdir -v build
cd build

../configure --prefix=/usr \
	LD=ld \
	--enable-languages=c,c++,go,fortran \
	--enable-default-pie \
	--enable-default-ssp \
	--disable-multilib \
	--disable-bootstrap \
	--disable-fixincludes \
	--with-system-zlib

make -j$(nproc)

# create temporary destination dir
DESTDIR=$WORK/___destdir___
/sbin/pkg-mkskel $DESTDIR

# install package into the temporary destination dir
make DESTDIR=$DESTDIR install

ln -svr $DESTDIR/usr/bin/cpp $DESTDIR/usr/lib

ln -sv gcc.1 $DESTDIR/usr/share/man/man1/cc.1

ln -sv gcc $DESTDIR/usr/bin/cc

install -d $DESTDIR/usr/lib/bfd-plugins/
ln -sfv ../../libexec/gcc/$($DESTDIR/usr/bin/gcc -dumpmachine)/13.2.0/liblto_plugin.so \
	$DESTDIR/usr/lib/bfd-plugins/

mkdir -pv $DESTDIR/usr/share/gdb/auto-load/usr/lib
mv -v $DESTDIR/usr/lib/*gdb.py $DESTDIR/usr/share/gdb/auto-load/usr/lib

# create package manifest
/sbin/pkg-mkmanifest $DESTDIR $pkg_name

# install the actual package in the root
/sbin/pkg-install $DESTDIR

# remove temporary dir
rm -rf $WORK
